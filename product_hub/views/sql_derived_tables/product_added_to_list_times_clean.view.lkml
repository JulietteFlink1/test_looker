# Owner: Product Analytics, Flavia Alvarez
# Created: 2023-03-22

view: product_added_to_list_clean {
  derived_table: {
    sql: WITH global_filters_and_parameters AS (select TRUE as generic_join_dim)
          , timestamp_difference as
                (SELECT
                    daily_events.event_name
                  , daily_events.hub_code
                  , inbound_progressed.product_sku
                  , inbound_progressed.method
                  , cast(inbound_progressed.quantity as int64) as quantity
                  , inbound_progressed.dropping_list_id
                  , inbound_progressed.action
                  , datetime_diff(daily_events.event_timestamp,
                    lag(daily_events.event_timestamp)
                      OVER (partition by daily_events.hub_code, daily_events.quinyx_badge_number order by daily_events.event_timestamp), MILLISECOND) as time_to_add_to_cart_millisec
                FROM `flink-data-dev.curated.daily_hub_staff_events` as daily_events
                LEFT JOIN `flink-data-prod.curated.event_inbound_progressed` as inbound_progressed
                  ON inbound_progressed.event_uuid = daily_events.event_uuid
                  and {% condition global_filters_and_parameters.datasource_filter %} DATE(inbound_progressed.event_timestamp) {% endcondition %}

      WHERE {% condition global_filters_and_parameters.datasource_filter %} DATE(daily_events.event_timestamp) {% endcondition %}
      --and inbound_progressed.action in ('product_added_to_list')
      and daily_events.event_name not in ('page_view', 'application_backgrounded', 'application_opened')
      )
      select
        dropping_list_id
      , hub_code
      , product_sku
      , method
      , sum(quantity) as quantity
      , sum(time_to_add_to_cart_millisec)/1000 as time_to_add_to_list_sec

      from timestamp_difference
      where event_name in ('inbound_progressed')
      and action in ('product_added_to_list')

      group by 1,2,3,4 ;;
  }

  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~     Dimensions     ~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  dimension: dropping_list_id {
    hidden: yes
    label: "Dropping List Id"
    description: "Unique identifier generated by back-end when the inbound process is started (legacy inventory_movement_id)."
  }

  dimension: primary_key {
    primary_key: yes
    hidden: yes
    label: "concat(dropping_list_id, country_iso, product_sku, method)"
    description: "concat(dropping_list_id, country_iso, product_sku, method)"
    sql: concat(${dropping_list_id}, ${hub_code}, ${product_sku}, ${method}) ;;
  }

  dimension: product_sku {
    hidden: yes
    description: "Product SKU."
    type: number
  }

  dimension: hub_code {
    hidden: yes
    description: "Hub code."
    type: string
  }


  dimension: method {
    hidden: yes
    description: "The used method to add/modify a product during list preparation. It can be scanned, text_searched, advanced_searched or manual (only for updated)."
  }

  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~~     Measures     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # Note that for this measures to be accurate we need to use sum_distinct with sql_distinct_key = primary_key
  # This is because this view is being joined to event_inbound_progressed and if we use a normal sum it will be suming
  # duplicate values

  measure: sum_time_to_add_to_list_sec_clean {
    group_label: "Times not affected by switching"
    label: "Sum Time to Add to List seconds (all events)"
    description: "Sum time_to_add_to_list time in seconds. This time is calculated taking into account almost all the events fired by hub one, this means that this time shouldnt be affected by switching flows."
    type: sum_distinct
    value_format: "0"
    sql_distinct_key: ${primary_key} ;;
    sql: ${TABLE}.time_to_add_to_list_sec ;;
  }

  measure: avg_time_to_add_to_cart_sec_clean {
    group_label: "Times not affected by switching"
    label: "Avg Time to Add to Cart seconds (all events)"
    description: "Avg time_to_add_to_list time in seconds. This time is calculated taking into account almost all the events fired by hub one, this means that this time shouldnt be affected by switching flows."
    type: average_distinct
    value_format: "0"
    sql_distinct_key: ${primary_key} ;;
    sql: ${TABLE}.time_to_add_to_list_sec ;;
  }
}
