# Owner: Product Analytics, Flavia Alvarez
# Created: 2022-11-22

view: product_added_to_list {
  derived_table: {
    sql: WITH global_filters_and_parameters AS (select TRUE as generic_join_dim)
          , timestamp_difference as
                (SELECT
                  dropping_list_id, country_iso, product_sku, method, cast(quantity as int64) as quantity
                  , datetime_diff(event_timestamp,lag(event_timestamp) OVER (PARTITION BY dropping_list_id order by event_timestamp), MILLISECOND) as time_to_add_to_cart_millisec
                FROM `flink-data-prod.curated.event_inbound_progressed`
                LEFT JOIN global_filters_and_parameters ON global_filters_and_parameters.generic_join_dim = TRUE

      WHERE {% condition global_filters_and_parameters.datasource_filter %} date(event_timestamp) {% endcondition %}
      and action in ('product_added_to_list')
      )
      select
      dropping_list_id
      , country_iso
      , product_sku
      , method
      , sum(quantity) as quantity
      , sum(time_to_add_to_cart_millisec)/1000 as time_to_add_to_list_sec

      from timestamp_difference

      group by 1,2,3,4 ;;
  }

  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~     Dimensions     ~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  dimension: dropping_list_id {
    label: "Dropping List Id"
    description: "Unique identifier generated by back-end when the inbound process is started (legacy inventory_movement_id)."
  }

  dimension: primary_key {
    primary_key: yes
    hidden: yes
    label: "concat(dropping_list_id, country_iso, product_sku, method)"
    description: "concat(dropping_list_id, country_iso, product_sku, method)"
    sql: concat(${dropping_list_id}, ${country_iso}, ${product_sku}, ${method}) ;;
  }

  dimension: product_sku {
    description: "Product SKU."
    type: number
  }

  dimension: country_iso {
    description: "Country iso."
    type: number
  }


  dimension: method {
    description: "The used method to add/modify a product during list preparation. It can be scanned, text_searched, advanced_searched or manual (only for updated)."
  }

  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~~     Measures     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # Note that for this measures to be accurate we need to use sum_distinct with sql_distinct_key = primary_key
  # This is because this view is being joined to event_inbound_progressed and if we use a normal sum it will be suming
  # duplicate values

  measure: sum_time_to_add_to_list_sec {
    label: "Sum Time to Add to List seconds"
    description: "Sum time_to_add_to_list time in seconds."
    type: sum_distinct
    value_format: "0"
    sql_distinct_key: ${primary_key} ;;
    sql: ${TABLE}.time_to_add_to_list_sec ;;
  }

  measure: avg_time_to_add_to_cart_sec {
    label: "Avg Time to Add to Cart seconds"
    description: "Avg time_to_add_to_list time in seconds."
    type: average_distinct
    value_format: "0"
    sql_distinct_key: ${primary_key} ;;
    sql: ${TABLE}.time_to_add_to_list_sec ;;
  }
}
