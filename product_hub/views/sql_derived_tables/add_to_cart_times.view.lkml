# Owner: Product Analytics, Flavia Alvarez
# Created: 2022-10-20

view: add_to_cart_times {
  derived_table: {
    sql: WITH global_filters_and_parameters AS (select TRUE as generic_join_dim)
    , timestamp_difference as
          (SELECT
            inventory_movement_id, country_iso, sku, is_scanned_item, cast(quantity as int64) as quantity
            , datetime_diff(event_timestamp,lag(event_timestamp) OVER (PARTITION BY inventory_movement_id order by event_timestamp), MILLISECOND) as time_to_add_to_cart_millisec
          FROM `flink-data-prod.curated.daily_stock_management_events`
          LEFT JOIN global_filters_and_parameters ON global_filters_and_parameters.generic_join_dim = TRUE

          WHERE {% condition global_filters_and_parameters.datasource_filter %} date(event_timestamp) {% endcondition %}
            and action = 'item_added_to_cart'
          )
          select
          inventory_movement_id
              , country_iso
              , sku
              , is_scanned_item
              , sum(quantity) as quantity
              , sum(time_to_add_to_cart_millisec)/1000 as time_to_add_to_cart_sec

          from timestamp_difference

          group by 1,2,3,4 ;;
  }

  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~     Dimensions     ~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  dimension: inventory_movement_id {
    label: "Daily Stock Management Events Inventory Movement Id"
    description: "A unique identifier generated by back-end when an inventory movement is started (inbound, outbound or correction)."
  }

  dimension: primary_key {
    primary_key: yes
    label: "concat(inventory_movement_id, country_iso, sku, is_scanned_item)"
    description: "concat(inventory_movement_id, sku, is_scanned_item)"
    sql: concat(${inventory_movement_id}, ${country_iso}, ${sku}, ${is_scanned_item}) ;;
  }

  dimension: sku {
    description: "Product SKU."
    type: number
  }

  dimension: country_iso {
    description: "Country iso."
    type: number
  }


  dimension: is_scanned_item {
    description: "boolean for when the item is added to cart by scanning or by searching."
  }

  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~~     Measures     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # Note that for this measures to be accurate we need to use sum_distinct with sql_distinct_key = order_id
  # This is because this view is being joined to daily_events and if we use a normal sum it will be suming
  # duplicate values

  measure: sum_time_to_add_to_cart_sec {
    label: "Sum Time to Add to Cart seconds"
    description: "Sum time_to_add_to_cart time in seconds."
    type: sum_distinct
    value_format: "0"
    sql_distinct_key: ${primary_key} ;;
    sql: ${TABLE}.time_to_add_to_cart_sec ;;
  }

  measure: avg_time_to_add_to_cart_sec {
    label: "Avg Time to Add to Cart seconds"
    description: "Avg time_to_add_to_cart time in seconds."
    type: average_distinct
    value_format: "0"
    sql_distinct_key: ${primary_key} ;;
    sql: ${TABLE}.time_to_add_to_cart_sec ;;
  }
}
