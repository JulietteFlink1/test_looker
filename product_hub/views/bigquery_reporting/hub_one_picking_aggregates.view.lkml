view: hub_one_picking_aggregates {

  sql_table_name: `flink-data-prod.reporting.hub_one_picking_aggregates`
    ;;
  view_label: "1 Hub One Picking Aggregates"

  # This is a table from the reporting layer tthat aggregates data of orders coming from hubOne

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~     Sets          ~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~     Parameters     ~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~     Dimensions     ~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # =========  IDs   =========

  dimension: table_uuid {
    type: string
    description: "Concatenation of event_date and order_id."
    sql: ${TABLE}.table_uuid ;;
  }

  dimension: order_id {
    type: string
    description: "Unique identifier generated by back-end when an order is placed."
    sql: ${TABLE}.order_id ;;
  }

  # =========  Location Dimensions   =========

  dimension: country_iso {
    type: string
    group_label: "Location Dimensions"
    label: "Country ISO"
    description: "Country ISO based on 'hub_code'."
    sql: ${TABLE}.country_iso ;;
  }

  dimension: hub_code {
    type: string
    group_label: "Location Dimensions"
    label: "Hub Code"
    description: "Code of a hub identical to back-end source tables."
    sql: ${TABLE}.hub_code ;;
  }

  # =========  Employee Attributes   =========

  dimension: picker_quinyx_badge_number {
    group_label: "Event Properties"
    type: string
    description: "Quinyx Badge number of the employee who started the picking process first."
    sql: ${TABLE}.picker_quinyx_badge_number ;;
  }

  # =========  Dates and Timestamps   =========

  dimension_group: event {
    type: time
    description: "Date when an event was triggered."
    timeframes: [
      raw,
      date,
      week,
      month,
      quarter,
      year
    ]
    convert_tz: no
    datatype: date
    sql: ${TABLE}.event_date ;;
  }

  # =========  Count of items   =========

  dimension: number_of_distinct_items_picked {
    type: number
    description: "Count of distinct product_sku picked (includes reported items)."
    sql: ${TABLE}.number_of_distinct_items_picked ;;
  }

  dimension: number_of_distinct_items_picked_by_clicked {
    type: number
    description: "Count of distinct product_sku picked by clicking."
    sql: ${TABLE}.number_of_distinct_items_picked_by_clicked ;;
  }

  dimension: number_of_distinct_items_picked_by_reported {
    type: number
    description: "Count of distinct product_sku picked by reporting."
    sql: ${TABLE}.number_of_distinct_items_picked_by_reported ;;
  }

  dimension: number_of_distinct_items_picked_by_reported_damaged_barcode {
    type: number
    description: "Count of distinct product_sku reported by selecting damaged_code option."
    sql: ${TABLE}.number_of_distinct_items_picked_by_reported_damaged_barcode ;;
  }

  dimension: number_of_distinct_items_picked_by_reported_wrong_barcode {
    type: number
    description: "Count of distinct product_sku reported by selecting wrong_barcode option."
    sql: ${TABLE}.number_of_distinct_items_picked_by_reported_wrong_barcode ;;
  }

  dimension: number_of_distinct_items_picked_by_scanned {
    type: number
    description: "Count of distinct product_sku picked by scanning."
    sql: ${TABLE}.number_of_distinct_items_picked_by_scanned ;;
  }

  dimension: number_of_distinct_items_refunded {
    type: number
    description: "Count of distinct product_sku refunded."
    sql: ${TABLE}.number_of_distinct_items_refunded ;;
  }

  dimension: number_of_distinct_items_reset {
    type: number
    description: "Count of distinct product_sku reset."
    sql: ${TABLE}.number_of_distinct_items_reset ;;
  }

  dimension: number_of_distinct_items_skipped {
    type: number
    description: "Count of distinct product_sku skipped."
    sql: ${TABLE}.number_of_distinct_items_skipped ;;
  }

  dimension: number_of_items_picked {
    type: number
    description: "Sum of quantity picked (includes reported items)."
    sql: ${TABLE}.number_of_items_picked ;;
  }

  dimension: number_of_items_picked_by_clicked {
    type: number
    description: "Sum of quantity picked by clicking."
    sql: ${TABLE}.number_of_items_picked_by_clicked ;;
  }

  dimension: number_of_items_picked_by_reported {
    type: number
    description: "Sum of quantity picked by reporting."
    sql: ${TABLE}.number_of_items_picked_by_reported ;;
  }

  dimension: number_of_items_picked_by_reported_damaged_barcode {
    type: number
    description: "Sum of quantity reported by selecting damaged_code option."
    sql: ${TABLE}.number_of_items_picked_by_reported_damaged_barcode ;;
  }

  dimension: number_of_items_picked_by_reported_wrong_barcode {
    type: number
    description: "Sum of quantity reported by selecting wrong_barcode option."
    sql: ${TABLE}.number_of_items_picked_by_reported_wrong_barcode ;;
  }

  dimension: number_of_items_picked_by_scanned {
    type: number
    description: "Sum of quantity picked by scanning."
    sql: ${TABLE}.number_of_items_picked_by_scanned ;;
  }

  dimension: number_of_items_refunded {
    type: number
    description: "Sum of quantity refunded."
    sql: ${TABLE}.number_of_items_refunded ;;
  }

  dimension: number_of_items_reset {
    type: number
    description: "Sum of quantity reset."
    sql: ${TABLE}.number_of_items_reset ;;
  }

  dimension: number_of_items_skipped {
    type: number
    description: "Sum of quantity skipped."
    sql: ${TABLE}.number_of_items_skipped ;;
  }

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~     Measures     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # =========  Total Metrics   =========

  measure: total_number_of_distinct_items_picked {
    type: sum
    group_label: "Total Metrics"
    description: "Count of distinct product_sku picked (includes reported items)."
    sql: ${number_of_distinct_items_picked} ;;
  }

  measure: total_number_of_distinct_items_picked_by_clicked {
    type: sum
    group_label: "Total Metrics"
    description: "Count of distinct product_sku picked by clicking."
    sql: ${number_of_distinct_items_picked_by_clicked} ;;
  }

  measure: total_number_of_distinct_items_picked_by_reported {
    type: sum
    group_label: "Total Metrics"
    description: "Count of distinct product_sku picked by reporting."
    sql: ${number_of_distinct_items_picked_by_reported} ;;
  }

  measure: total_number_of_distinct_items_picked_by_reported_damaged_barcode {
    type: sum
    group_label: "Total Metrics"
    description: "Count of distinct product_sku reported by selecting damaged_code option."
    sql: ${number_of_distinct_items_picked_by_reported_damaged_barcode} ;;
  }

  measure: total_number_of_distinct_items_picked_by_reported_wrong_barcode {
    type: sum
    group_label: "Total Metrics"
    description: "Count of distinct product_sku reported by selecting wrong_barcode option."
    sql: ${number_of_distinct_items_picked_by_reported_wrong_barcode} ;;
  }

  measure: total_number_of_distinct_items_picked_by_scanned {
    type: sum
    group_label: "Total Metrics"
    description: "Count of distinct product_sku picked by scanning."
    sql: ${number_of_distinct_items_picked_by_reported_wrong_barcode} ;;
  }

  measure: total_number_of_distinct_items_refunded {
    type: sum
    group_label: "Total Metrics"
    description: "Count of distinct product_sku refunded."
    sql: ${number_of_distinct_items_refunded} ;;
  }

  measure: total_number_of_distinct_items_reset {
    type: sum
    group_label: "Total Metrics"
    description: "Count of distinct product_sku reset."
    sql: ${number_of_distinct_items_reset} ;;
  }

  measure: total_number_of_distinct_items_skipped {
    type: sum
    group_label: "Total Metrics"
    description: "Count of distinct product_sku skipped."
    sql: ${number_of_distinct_items_skipped} ;;
  }

  measure: total_number_of_items_picked {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity picked (includes reported items)."
    sql: ${number_of_items_picked} ;;
  }

  measure: total_number_of_items_picked_refunded {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity picked + refunded."
    sql: (${number_of_items_picked} + ${number_of_items_refunded}) ;;
  }

  measure: total_number_of_items_picked_by_clicked {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity picked by clicking."
    sql: ${number_of_items_picked_by_clicked} ;;
  }

  measure: total_number_of_items_picked_by_reported {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity picked by reporting."
    sql: ${number_of_items_picked_by_reported} ;;
  }

  measure: total_number_of_items_picked_by_reported_damaged_barcode {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity reported by selecting damaged_code option."
    sql: ${number_of_items_picked_by_reported_damaged_barcode} ;;
  }

  measure: total_number_of_items_picked_by_reported_wrong_barcode {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity reported by selecting wrong_barcode option."
    sql: ${number_of_items_picked_by_reported_wrong_barcode} ;;
  }

  measure: total_number_of_items_picked_by_scanned {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity picked by scanning."
    sql: ${number_of_items_picked_by_scanned} ;;
  }

  measure: total_number_of_items_refunded {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity refunded."
    sql: ${number_of_items_refunded} ;;
  }

  measure: total_number_of_items_reset {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity reset."
    sql: ${number_of_items_reset} ;;
  }

  measure: total_number_of_items_skipped {
    type: sum
    group_label: "Total Metrics"
    description: "Sum of quantity skipped."
    sql: ${number_of_items_skipped} ;;
}

  measure: number_of_orders {
    type: count_distinct
    group_label: "Total Metrics"
    description: "Count of distinct order_id."
    sql: ${order_id} ;;
  }
  # =========  Rate Metrics   =========

  measure: qty_refunded_per_total_qty {
    group_label: "Rate Metrics"
    label: "% Refunded Items"
    description: "Quantity Refunded / Total Quantity (sum of items picked and refunded)"
    type: number
    value_format_name: percent_1
    sql: ${total_number_of_items_refunded} / nullif(${total_number_of_items_picked_refunded},0) ;;
  }

  measure: qty_skipped_per_total_qty {
    group_label: "Rate Metrics"
    label: "% Skipped Items"
    description: "Quantity Skipped / Total Quantity (sum of items picked and refunded)"
    type: number
    value_format_name: percent_1
    sql: ${total_number_of_items_skipped} / nullif(${total_number_of_items_picked_refunded},0) ;;
  }

  measure: qty_reported_per_total_qty {
    group_label: "Rate Metrics"
    label: "% Reported Items"
    description: "Quantity Reported / Total Quantity (sum of items picked and refunded)"
    type: number
    value_format_name: percent_1
    sql: ${total_number_of_items_picked_by_reported} / nullif(${total_number_of_items_picked_refunded},0) ;;
  }

  measure: qty_scanned_per_qty_picked {
    group_label: "Rate Metrics"
    label: "% Scanned Items"
    description: "Quantity Picked by Scan / (Quantity Picked by Scan + Quantity Picked by Click)"
    type: number
    value_format_name: percent_1
    sql: ${total_number_of_items_picked_by_scanned} / nullif(${total_number_of_items_picked_by_scanned}+${total_number_of_items_picked_by_clicked},0) ;;
  }

}
