# Owner: Product Analytics, Flavia Alvarez
# Created: 2022-12-22

view: event_inbound_progressed {
  sql_table_name: `flink-data-dev.curated.event_inbound_progressed`
    ;;

  view_label: "1 Event: Order Progressed"

  # This is the curated table for Order Progressed event coming from Hub One

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~     Sets          ~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~     Parameters     ~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~     Dimensions     ~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # =========  IDs   =========

  dimension: event_uuid {
    type: string
    group_label: "IDs"
    label: "Event UUID"
    description: "Unique identifier of an event"
    primary_key: yes
    hidden: yes
    sql: ${TABLE}.event_uuid ;;
  }

  dimension: anonymous_id {
    type: string
    group_label: "IDs"
    label: "Anonymous ID"
    description: "User ID set by Segment"
    hidden: yes
    sql: ${TABLE}.anonymous_id ;;
  }

# =========  Location Attributes   =========

  dimension: country_iso {
    type: string
    group_label: "Location Dimensions"
    label: "Country ISO"
    description: "Country ISO based on 'hub_code'."
    sql: ${TABLE}.country_iso ;;
  }

  dimension: hub_code {
    type: string
    group_label: "Location Dimensions"
    label: "Hub Code"
    description: "Code of a hub identical to back-end source tables."
    sql: ${TABLE}.hub_code ;;
  }

  dimension: locale {
    group_label: "Location Dimensions"
    label: "Locale"
    description: "Language code | Coutnry, region code"
    type: string
    sql: ${TABLE}.locale ;;
  }

  # =========  Employee Attributes   =========

  dimension: quinyx_badge_number {
    type: string
    group_label: "Employee Attributes"
    label: "Quinyx Badge Number"
    sql: ${TABLE}.quinyx_badge_number ;;
  }

  dimension: user_id {
    type: string
    group_label: "Employee Attributes"
    label: "Auth0 id" #Not yet but it should be
    hidden: yes
    sql: ${TABLE}.user_id ;;
  }

  # =========  Dates and Timestamps   =========

  dimension_group: received {
    type: time
    hidden: yes
    sql: ${TABLE}.received_at ;;
  }

  dimension_group: event {
    type: time
    hidden: yes
    convert_tz: no
    datatype: date
    sql: ${TABLE}.event_date ;;
  }

  dimension_group: event_timestamp {
    group_label: "Date / Timestamp"
    label: "Event"
    description: "Timestamp of when an event happened"
    type: time
    timeframes: [
      time,
      date,
      week,
      hour_of_day,
      quarter
    ]
    sql: ${TABLE}.event_timestamp ;;
  }

  # =========  Generic Dimensions   =========

  dimension: event_name {
    group_label: "Generic Dimensions"
    label: "Event Name"
    description: "Name of the event triggered"
    type: string
    sql: ${TABLE}.event_name ;;
  }

  dimension: event_text {
    group_label: "Generic Dimensions"
    label: "Event Text"
    description: "event_name in camel case"
    type: string
    hidden: yes
    sql: ${TABLE}.event_text ;;
  }

  dimension: screen_name {
    group_label: "Generic Dimensions"
    label: "Screen Name"
    description: "Screen name where the event was triggered"
    type: string
    sql: ${TABLE}.screen_name ;;
  }

# =========  Event Dimensions   =========

  dimension: action {
    description: "The action performed."
    type: string
    sql: ${TABLE}.action ;;
  }

  dimension: method {
    description: "The used method to add/modify a product during list preparation. It can be scanned, text_searched, advanced_searched or manual (only for updated)."
    type: string
    sql: ${TABLE}.method ;;
  }

  dimension: dropping_list_id {
    type: string
    description: "Unique identifier generated by back-end when the inbound process is started (legacy inventory_movement_id)."
    sql: ${TABLE}.dropping_list_id ;;
  }

  dimension: product_sku {
    description: "The sku of the product, as available in the backend."
    type: string
    sql: ${TABLE}.product_sku ;;
  }

  dimension: quantity {
    description: "The quantity affected. It is always in single units and can be negative when action = product_updated_quantity."
    type: number
    sql: ${TABLE}.quantity ;;
  }

  dimension: is_handling_unit {
    type: yesno
    description: "True when the action was perform at handling unit."
    sql: ${TABLE}.is_handling_unit ;;
  }

  # =========  Other Dimensions   =========

  dimension: context_ip {
    type: string
    hidden: yes
    sql: ${TABLE}.context_ip ;;
  }

  dimension: page_path {
    type: string
    hidden: yes
    sql: ${TABLE}.page_path ;;
  }

  dimension: page_title {
    type: string
    hidden: yes
    sql: ${TABLE}.page_title ;;
  }

  dimension: page_url {
    type: string
    hidden: yes
    sql: ${TABLE}.page_url ;;
  }

  dimension: user_agent {
    type: string
    hidden: yes
    sql: ${TABLE}.user_agent ;;
  }

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
  # ~~~~~~~~~~~~~~~      Measures     ~~~~~~~~~~~~~~~ #
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

  # =========  Total Metrics   =========

  measure: number_of_events {
    group_label: "Total Metrics"
    label: "# Events"
    description: "Number of events triggered"
    type: count_distinct
    sql: ${TABLE}.event_uuid ;;
  }

  measure: number_of_dropping_lists {
    group_label: "Total Metrics"
    label: "# Dropping Lists"
    description: "Number of Dropping Lists."
    type: count_distinct
    sql: ${dropping_list_id} ;;
  }

  measure: number_of_products {
    group_label: "Total Metrics"
    label: "Number of products"
    description: "Sum of quantity."
    type: sum
    sql: ${quantity} ;;
  }

  measure: number_of_products_added_to_list {
    group_label: "Total Metrics"
    label: "Number of Products Added To List"
    description: "Sum of quantity of products added to list (action = product_added_to_list)."
    type: sum
    filters: [action: "product_added_to_list"]
    sql: ${quantity} ;;
  }

  measure: number_of_products_removed_from_list {
    group_label: "Total Metrics"
    label: "Number of Products Removed From List"
    description: "Sum of quantity of products removed from list (action = product_removed_from_list)."
    type: sum
    filters: [action: "product_removed_from_list"]
    sql: ${quantity} ;;
  }

  measure: number_of_products_updated {
    group_label: "Total Metrics"
    label: "Number of Products Updated"
    description: "Sum of quantity of products updated from list (action = product_updated_quantity)."
    type: sum
    filters: [action: "product_updated_quantity"]
    sql: ${quantity} ;;
  }

  measure: number_of_products_dropped {
    group_label: "Total Metrics"
    label: "Number of Products Dropped"
    description: "Sum of quantity of products dropped (action = product_dropped)."
    type: sum
    filters: [action: "product_dropped"]
    sql: ${quantity} ;;
  }

  # =========  Rate Metrics   =========

}
