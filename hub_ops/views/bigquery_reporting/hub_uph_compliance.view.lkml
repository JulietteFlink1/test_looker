view: hub_uph_compliance {
  sql_table_name: `flink-data-dev.dbt_vbreda_reporting.hub_uph_compliance` ;;

  dimension: table_uuid {
    type: string
    primary_key: yes
    hidden: yes
    description: "Generic identifier of a table in BigQuery that represent 1 unique row of this table."
    sql: ${TABLE}.table_uuid ;;
  }

  dimension: country_iso {
    hidden: yes
    type: string
    description: "Country ISO based on 'hub_code'."
    sql: ${TABLE}.country_iso ;;
  }

  dimension: hub_code {
    hidden: yes
    type: string
    description: "Code of a hub identical to back-end source tables."
    sql: ${TABLE}.hub_code ;;
  }

  dimension: quinyx_badge_number {
    hidden: yes
    type: string
    description: "Employee ID generated by HR systems (badgeNo in Quinyx)."
    sql: ${TABLE}.quinyx_badge_number ;;
  }

  dimension: shift_id {
    hidden: yes
    type: number
    description: "Unique ID generated by Quinyx for each shift."
    sql: ${TABLE}.shift_id ;;
  }

  dimension: is_punched_shift {
    type: yesno
    description: "True if the shift has punch in/out events, false otherwise."
    sql: ${TABLE}.is_punched_shift ;;
  }

  dimension_group: event {
    group_label: "> Dates & Timestamps"
    type: time
    description: "Date on which the event occurred. In case the event occurred before 3am UTC, it is attributed to the previous day."
    timeframes: [
      date,
      week,
      month
    ]
    convert_tz: no
    datatype: date
    sql: ${TABLE}.event_date ;;
  }

  dimension_group: evaluation_ends {
    group_label: "> Dates & Timestamps"
    type: time
    description: "Timestamp at which an employee punched out. In case it is not available, the shift end timestamp is used."
    timeframes: [
      time
    ]
    sql: ${TABLE}.evaluation_ends_timestamp ;;
  }

  dimension_group: evaluation_starts {
    group_label: "> Dates & Timestamps"
    type: time
    description: "Timestamp at which an employee punched in. In case it is not available, the shift start timestamp is used."
    timeframes: [
      time
    ]
    sql: ${TABLE}.evaluation_starts_timestamp ;;
  }

  dimension_group: first_event_hub_one {
    group_label: "> Dates & Timestamps"
    type: time
    description: "Timestamp at which the first Hub One event occurred on the event_date."
    timeframes: [
      time
    ]
    sql: ${TABLE}.first_event_hub_one_timestamp ;;
  }

  dimension_group: last_event_hub_one {
    group_label: "> Dates & Timestamps"
    type: time
    description: "Timestamp at which the last Hub One event occurred on the event_date."
    timeframes: [
      time
    ]
    sql: ${TABLE}.last_event_hub_one_timestamp ;;
  }

  dimension_group: first_event_within_shift {
    group_label: "> Dates & Timestamps"
    type: time
    description: "Timestamp at which the first Hub One event occurred after the employee punched in. In case punch is not available, the planned start of the shift is used."
    timeframes: [
      time
    ]
    sql: ${TABLE}.first_event_within_shift_timestamp ;;
  }

  dimension_group: last_event_within_shift {
    group_label: "> Dates & Timestamps"
    type: time
    description: "Timestamp at which the last Hub One event occurred before the employee punched out. In case punch is not available, the planned end of the shift is used."
    timeframes: [
      time
    ]
    sql: ${TABLE}.last_event_within_shift_timestamp ;;
  }

  dimension: number_of_events_hub_one {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_events_hub_one ;;
  }

  dimension: number_of_events_within_shift {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_events_within_shift ;;
  }

  dimension: number_of_picked_or_dropped_or_counted_items_hub_one {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_picked_or_dropped_or_counted_items_hub_one ;;
  }

  dimension: number_of_picked_or_dropped_or_counted_items_within_shift {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_picked_or_dropped_or_counted_items_within_shift ;;
  }

  dimension: number_of_checks_hub_one {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_checks_hub_one ;;
  }

  dimension: number_of_checks_within_shift {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_checks_within_shift ;;
  }

  dimension: number_of_counted_items_hub_one {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_counted_items_hub_one ;;
  }

  dimension: number_of_counted_items_within_shift {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_counted_items_within_shift ;;
  }

  dimension: number_of_dropped_items_hub_one {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_dropped_items_hub_one ;;
  }

  dimension: number_of_dropped_items_within_shift {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_dropped_items_within_shift ;;
  }

  dimension: number_of_picked_items_hub_one {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_picked_items_hub_one ;;
  }

  dimension: number_of_picked_items_within_shift {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_picked_items_within_shift ;;
  }

  dimension: number_of_picked_orders_hub_one {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_picked_orders_hub_one ;;
  }

  dimension: number_of_picked_orders_within_shift {
    type: number
    hidden: yes
    sql: ${TABLE}.number_of_picked_orders_within_shift ;;
  }

  dimension: are_all_events_within_shift {
    type: yesno
    label: "All Events Within Shift"
    description: "Yes if all events occurred within the shift, False otherwise."
    sql: ${number_of_events_hub_one} = ${number_of_events_within_shift}  ;;
  }

 ########## MEASURES ###########

  measure: sum_number_of_events_hub_one {
    label: "# Events"
    group_label: "Hub One"
    type: sum
    description: "Number of Hub One events."
    sql: ${number_of_events_hub_one} ;;
  }

  measure: sum_number_of_events_within_shift {
    label: "# Events - Within Shift"
    group_label: "Within Shift"
    type: sum
    description: "Number of Hub One events recorded during the shift."
    sql: ${TABLE}.number_of_events_within_shift ;;
  }

  measure: sum_number_of_picked_or_dropped_or_counted_items_hub_one {
    label: "# Picked/Dropped/Counted Items"
    group_label: "Hub One"
    type: sum
    description: "Number of Picked/Dropped/Counted items. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_picked_or_dropped_or_counted_items_hub_one ;;
  }

  measure: sum_number_of_picked_or_dropped_or_counted_items_within_shift {
    label: "# Picked/Dropped/Counted Items - Within Shift"
    group_label: "Within Shift"
    type: sum
    description: "Number of Picked/Dropped/Counted items during the shift. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_picked_or_dropped_or_counted_items_within_shift ;;
  }

  measure: sum_number_of_checks_hub_one {
    label: "# Checks"
    group_label: "Hub One"
    type: sum
    description: "Number of checks. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_checks_hub_one ;;
  }

  measure: sum_number_of_checks_within_shift {
    label: "# Checks - Within Shift"
    group_label: "Within Shift"
    type: sum
    description: "Number of checks performed during the shift. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_checks_within_shift ;;
  }

  measure: sum_number_of_counted_items_hub_one {
    label: "# Counted Items"
    group_label: "Hub One"
    type: sum
    description: "Number of counted items. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_counted_items_hub_one ;;
  }

  measure: sum_number_of_counted_items_within_shift {
    label: "# Counted Items - Within Shift"
    group_label: "Within Shift"
    type: sum
    description: "Number of counted items during the shift. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_counted_items_within_shift ;;
  }

  measure: sum_number_of_dropped_items_hub_one {
    label: "# Dropped Items"
    group_label: "Hub One"
    type: sum
    description: "Number of items dropped during the inbounding process. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_dropped_items_hub_one ;;
  }

  measure: sum_number_of_dropped_items_within_shift {
    label: "# Dropped Items - Within Shift"
    group_label: "Within Shift"
    type: sum
    description: "Number of items dropped during the inbounding process during the shift. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_dropped_items_within_shift ;;
  }

  measure: sum_number_of_picked_items_hub_one {
    label: "# Picked Items"
    group_label: "Hub One"
    type: sum
    description: "Number of picked items. Based on Hub One app tracking app."
    sql: ${TABLE}.number_of_picked_items_hub_one ;;
  }

  measure: sum_number_of_picked_items_within_shift {
    label: "# Picked Items - Within Shift"
    group_label: "Within Shift"
    type: sum
    description: "Number of picked items during the shift. Based on Hub One app tracking app."
    sql: ${TABLE}.number_of_picked_items_within_shift ;;
  }

  measure: sum_number_of_picked_orders_hub_one {
    label: "# Picked Orders"
    group_label: "Hub One"
    type: sum
    description: "Number of picked orders. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_picked_orders_hub_one ;;
  }

  measure: sum_number_of_picked_orders_within_shift {
    label: "# Picked Orders - Within Shift"
    group_label: "Within Shift"
    type: sum
    description: "Number of picked orders during the shift. Based on Hub One app tracking data."
    sql: ${TABLE}.number_of_picked_orders_within_shift ;;
  }

  measure: count_day_employee_all_events_within_shift {
    type: count
    label: "# Day-Employee - All Events Within Shift"
    description: "Number of Day-Employee combinations where all events occured within the shift."
    filters: [are_all_events_within_shift: "yes"]
  }

  measure: count_day_employee {
    label: "# Day-Employee"
    description: "Number of Day-Employee combinations."
    type: count
  }

  measure: share_of_day_employee_having_all_events_within_shift{
    label: "% Day-Employee - All Events Within Shift"
    description: "Share of Day-Employee combinations where all events occured within the shift."
    type: number
    sql: safe_divide(${count_day_employee_all_events_within_shift},${count_day_employee}) ;;
    value_format_name: percent_1
  }



}
